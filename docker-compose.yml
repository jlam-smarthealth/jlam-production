# JLAM CONSOLIDATED INFRASTRUCTURE
# Base: EXACT CURRENT PRODUCTION CONFIGURATION (Working on 51.158.190.109)
# Created by: ELITE DEVOPS MASTER
# Date: 2025-08-26
# Status: PRODUCTION MIRROR - Ready for incremental enhancements

services:
  traefik:
    image: traefik:v3.0
    container_name: jlam-traefik
    restart: unless-stopped
    ports:
      - "80:80"     # HTTP port
      - "443:443"   # HTTPS port 
      - "8080:8080" # Dashboard port
    command:
      - "--api=true"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--log.level=INFO"
      # ODIN BLESSED: Health check endpoint for monitoring
      - "--ping=true"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./config/ssl:/etc/ssl/jlam:ro"
      - "./config/traefik:/etc/traefik/dynamic:ro"
    networks:
      - jlam-network
    # ODIN BLESSED: Comprehensive health monitoring
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # ODIN BLESSED: Resource limits for predictable scaling
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.5'
        reservations:
          memory: 64M
          cpus: '0.1'
      # ODIN PATTERN: Service discovery and restart policies
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    # ODIN BLESSED: Enterprise service discovery labels
    labels:
      - "jlam.service.name=traefik"
      - "jlam.service.type=load-balancer"
      - "jlam.service.tier=infrastructure"
      - "jlam.service.version=3.0.4"
      - "jlam.monitoring.enabled=true"
      - "jlam.monitoring.port=8080"
      - "jlam.monitoring.path=/ping"
      - "jlam.scaling.min=1"
      - "jlam.scaling.max=1"
      - "odin.pattern=enterprise-gateway"
  
  nginx:
    image: nginx:alpine
    container_name: jlam-web
    restart: unless-stopped
    volumes:
      - "./app:/usr/share/nginx/html:ro"
      - "./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro"
    networks:
      - jlam-network
    # ODIN BLESSED: Enterprise-grade health monitoring with optimized endpoint
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    # ODIN BLESSED: Resource limits for predictable performance
    deploy:
      resources:
        limits:
          memory: 64M
          cpus: '0.3'
        reservations:
          memory: 32M
          cpus: '0.1'
      # ODIN PATTERN: Service discovery and restart policies  
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 5
        window: 120s
    labels:
      - "traefik.enable=true"
      # ODIN BLESSED: HTTP router with security headers
      - "traefik.http.routers.web.rule=Host(`jlam.nl`) || Host(`51.158.190.109`)"
      - "traefik.http.routers.web.entrypoints=web"
      - "traefik.http.routers.web.middlewares=security-headers@file,rate-limit@file"
      # ODIN BLESSED: HTTPS router with enhanced security  
      - "traefik.http.routers.web-secure.rule=Host(`jlam.nl`) || Host(`51.158.190.109`)"  
      - "traefik.http.routers.web-secure.entrypoints=websecure"
      - "traefik.http.routers.web-secure.tls=true"
      - "traefik.http.routers.web-secure.middlewares=security-headers@file,rate-limit@file"
      # ODIN PATTERN: Service configuration
      - "traefik.http.services.nginx.loadbalancer.server.port=80"
      - "traefik.http.services.nginx.loadbalancer.healthcheck.path=/health"
      - "traefik.http.services.nginx.loadbalancer.healthcheck.interval=30s"
      # ODIN BLESSED: Enterprise service discovery labels
      - "jlam.service.name=nginx"
      - "jlam.service.type=web-server"
      - "jlam.service.tier=frontend"
      - "jlam.service.version=alpine"
      - "jlam.monitoring.enabled=true"
      - "jlam.monitoring.port=80"
      - "jlam.monitoring.path=/health"
      - "jlam.scaling.min=1"
      - "jlam.scaling.max=3"
      - "odin.pattern=enterprise-frontend"

  authentik-server:
    image: ghcr.io/goauthentik/server:2024.12.1
    container_name: jlam-authentik-server
    restart: unless-stopped
    command: server
    environment:
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
      AUTHENTIK_ERROR_REPORTING__ENABLED: "false"
      AUTHENTIK_DISABLE_UPDATE_CHECK: "true"
      AUTHENTIK_DISABLE_STARTUP_ANALYTICS: "true"
      AUTHENTIK_AVATARS: "initials"
      # Database Configuration
      AUTHENTIK_POSTGRESQL__HOST: 51.158.128.5
      AUTHENTIK_POSTGRESQL__PORT: 5457
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__USER: authentik_app
      AUTHENTIK_POSTGRESQL__PASSWORD: ${AUTHENTIK_DB_PASSWORD}
      # Redis Configuration (using internal Redis)
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_REDIS__PORT: 6379
    volumes:
      - authentik_media:/media
      - authentik_custom_templates:/templates
    networks:
      - jlam-network
    depends_on:
      - authentik-redis
    healthcheck:
      test: ["CMD-SHELL", "ak healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
    labels:
      - "traefik.enable=true"
      # HTTP router
      - "traefik.http.routers.authentik.rule=Host(`auth.jlam.nl`)"
      - "traefik.http.routers.authentik.entrypoints=web"
      - "traefik.http.routers.authentik.middlewares=authentik-redirect"
      - "traefik.http.routers.authentik.priority=100"
      # HTTPS router
      - "traefik.http.routers.authentik-secure.rule=Host(`auth.jlam.nl`)"
      - "traefik.http.routers.authentik-secure.entrypoints=websecure"
      - "traefik.http.routers.authentik-secure.tls=true"
      - "traefik.http.routers.authentik-secure.priority=100"
      # Service configuration
      - "traefik.http.services.authentik.loadbalancer.server.port=9000"
      # Middleware for redirect
      - "traefik.http.middlewares.authentik-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.authentik-redirect.redirectscheme.permanent=true"
      # JLAM service labels
      - "jlam.service.name=authentik-server"
      - "jlam.service.type=authentication"
      - "jlam.service.tier=security"
      - "jlam.service.version=2024.12.1"
      - "jlam.monitoring.enabled=true"
      - "jlam.monitoring.port=9000"
      - "jlam.scaling.min=1"
      - "jlam.scaling.max=2"
      - "odin.pattern=enterprise-auth"

  authentik-worker:
    image: ghcr.io/goauthentik/server:2024.12.1
    container_name: jlam-authentik-worker
    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
      AUTHENTIK_ERROR_REPORTING__ENABLED: "false"
      AUTHENTIK_DISABLE_UPDATE_CHECK: "true"
      AUTHENTIK_DISABLE_STARTUP_ANALYTICS: "true"
      # Database Configuration
      AUTHENTIK_POSTGRESQL__HOST: 51.158.128.5
      AUTHENTIK_POSTGRESQL__PORT: 5457
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__USER: authentik_app
      AUTHENTIK_POSTGRESQL__PASSWORD: ${AUTHENTIK_DB_PASSWORD}
      # Redis Configuration
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_REDIS__PORT: 6379
    volumes:
      - authentik_media:/media
      - authentik_certs:/certs
      - authentik_custom_templates:/templates
    networks:
      - jlam-network
    depends_on:
      - authentik-redis
    healthcheck:
      test: ["CMD-SHELL", "ak healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "jlam.service.name=authentik-worker"
      - "jlam.service.type=authentication-worker"
      - "jlam.service.tier=security"
      - "jlam.service.version=2024.12.1"
      - "jlam.monitoring.enabled=false"
      - "jlam.scaling.min=1"
      - "jlam.scaling.max=2"
      - "odin.pattern=enterprise-worker"

  authentik-redis:
    image: redis:alpine
    container_name: jlam-authentik-redis
    restart: unless-stopped
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - authentik_redis:/data
    networks:
      - jlam-network
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    labels:
      - "jlam.service.name=authentik-redis"
      - "jlam.service.type=cache"
      - "jlam.service.tier=data"
      - "jlam.service.version=alpine"
      - "jlam.monitoring.enabled=true"
      - "jlam.scaling.min=1"
      - "jlam.scaling.max=1"
      - "odin.pattern=enterprise-cache"

volumes:
  authentik_media:
    driver: local
  authentik_certs:
    driver: local
  authentik_custom_templates:
    driver: local
  authentik_redis:
    driver: local

networks:
  jlam-network:
    driver: bridge
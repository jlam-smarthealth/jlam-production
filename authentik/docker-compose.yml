# Authentik SSO Platform for JLAM
# Authentication & Identity Management
# Integrates with existing JLAM infrastructure

version: '3.8'

services:
  authentik-postgresql:
    image: docker.io/library/postgres:16-alpine
    restart: unless-stopped
    container_name: authentik-db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d authentik -U authentik"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - authentik_database:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${AUTHENTIK_PG_PASS}
      POSTGRES_USER: ${AUTHENTIK_PG_USER:-authentik}
      POSTGRES_DB: ${AUTHENTIK_PG_DB:-authentik}
    networks:
      - jlam-network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  authentik-redis:
    image: docker.io/library/redis:alpine
    container_name: authentik-redis
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - authentik_redis:/data
    networks:
      - jlam-network
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  authentik-server:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/authentik}:${AUTHENTIK_TAG:-2024.8.3}
    container_name: authentik-server
    restart: unless-stopped
    command: server
    environment:
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgresql
      AUTHENTIK_POSTGRESQL__USER: ${AUTHENTIK_PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${AUTHENTIK_PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${AUTHENTIK_PG_PASS}
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
      AUTHENTIK_ERROR_REPORTING__ENABLED: "false"
      AUTHENTIK_DISABLE_UPDATE_CHECK: "true"
      AUTHENTIK_DISABLE_STARTUP_ANALYTICS: "true"
      # JLAM Integration Settings
      AUTHENTIK_LOG_LEVEL: info
      AUTHENTIK_EMAIL__HOST: ${SMTP_HOST:-localhost}
      AUTHENTIK_EMAIL__PORT: ${SMTP_PORT:-587}
      AUTHENTIK_EMAIL__USERNAME: ${SMTP_USER:-}
      AUTHENTIK_EMAIL__PASSWORD: ${SMTP_PASS:-}
      AUTHENTIK_EMAIL__USE_TLS: ${SMTP_TLS:-false}
      AUTHENTIK_EMAIL__USE_SSL: ${SMTP_SSL:-false}
      AUTHENTIK_EMAIL__FROM: ${SMTP_FROM:-noreply@jlam.nl}
    volumes:
      - authentik_media:/media
      - authentik_certs:/certs
      - authentik_templates:/templates
    ports:
      - "9000:9000"
      - "9443:9443"
    depends_on:
      - authentik-postgresql
      - authentik-redis
    networks:
      - jlam-network
    labels:
      - "traefik.enable=true"
      # HTTP Router
      - "traefik.http.routers.authentik.rule=Host(`auth.jlam.nl`)"
      - "traefik.http.routers.authentik.entrypoints=web"
      - "traefik.http.routers.authentik.middlewares=authentik-redirect-https"
      # HTTPS Router  
      - "traefik.http.routers.authentik-secure.rule=Host(`auth.jlam.nl`)"
      - "traefik.http.routers.authentik-secure.entrypoints=websecure"
      - "traefik.http.routers.authentik-secure.tls=true"
      - "traefik.http.routers.authentik-secure.service=authentik"
      # Service Configuration
      - "traefik.http.services.authentik.loadbalancer.server.port=9000"
      # Middleware - HTTPS Redirect
      - "traefik.http.middlewares.authentik-redirect-https.redirectscheme.scheme=https"
      # Health Check Labels
      - "jlam.service.name=authentik-server"
      - "jlam.service.type=authentication"
      - "jlam.monitoring.enabled=true"
      - "jlam.monitoring.path=/api/v3/admin/system/"
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9000/api/v3/admin/system/"]
      start_period: 60s
      interval: 30s
      timeout: 10s
      retries: 3

  authentik-worker:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/authentik}:${AUTHENTIK_TAG:-2024.8.3}
    container_name: authentik-worker
    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgresql
      AUTHENTIK_POSTGRESQL__USER: ${AUTHENTIK_PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${AUTHENTIK_PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${AUTHENTIK_PG_PASS}
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
      AUTHENTIK_ERROR_REPORTING__ENABLED: "false"
      AUTHENTIK_DISABLE_UPDATE_CHECK: "true"
      AUTHENTIK_DISABLE_STARTUP_ANALYTICS: "true"
    volumes:
      - authentik_media:/media
      - authentik_certs:/certs
      - authentik_templates:/templates
    depends_on:
      - authentik-postgresql
      - authentik-redis
    networks:
      - jlam-network
    labels:
      - "jlam.service.name=authentik-worker"
      - "jlam.service.type=background-worker"
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

volumes:
  authentik_database:
    driver: local
  authentik_redis:
    driver: local
  authentik_media:
    driver: local
  authentik_certs:
    driver: local
  authentik_templates:
    driver: local

networks:
  jlam-network:
    external: true